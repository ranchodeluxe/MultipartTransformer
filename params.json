{"name":"Multipart Transformer -- An Experiment in QGIS Python API 2.x","tagline":"QGIS plugin that takes multi-part polygons and converts them to single-part geometries","body":"### Intro\r\nThanks for this opportunity. I only get a chance to build QGIS plugins once in awhile and it's always fun to learn new things about the API.\r\n\r\n```\r\n$ qgis.utils.iface == GOODFUN\r\n$ True\r\n```\r\n\r\n### Initial Approach\r\nI'm an idealist and my first approach did not take time constraints or the real world into account. Here's my original road map for the tool:\r\n\r\n1. The tool will take input from TOC layers or directories\r\n2. The tool will flag input QgsVectorLayers ( of any dataProvider type ) in the related family of MuliPolygons\r\n3. It will add flagged inputs to a QListWidget Item\r\n4. After a user select's an item we'll walk them through an editing workflow, which will include...\r\n5. A choice to transform multi-part polygons with one of the many existing multi-part editing tools, or... \r\n6. A choice to fix multi-part polygons in place. By \"in place\" I mean we would not solve the problem by exporting all the layer's features to a new datasource. Rather, we would remove the multi-part record, break it up and append it to the existing datasource with the fields intact. \r\n7. The tool should work with QGIS versions from 1.8 through 2.x nightly build. I wanted to do this because I don't know a single soul using version 2.x\r\n\r\n### Hurdles\r\nI quickly discovered issues with the above road map while testing against [InaSAFE's data repo](https://github.com/AIFDR/inasafe_data). \r\n\r\nItem `2` above misses the fact that shapefiles have no concept of MultiPolygoness even after being read by OGR. This means we cannot quickly flag shapefiles by a layer-level attribute. I realized we'd have to loop through *all* layer features hunting for a multi-part geometry to flag them correctly. In combination with the size of some [InaSAFE shapefiles](https://github.com/AIFDR/inasafe_data/blob/master/exposure/OSM_structures_indonesia_20121005.shp), it became apparent that any feature looping would have to be threaded -- both for multi-part flagging and multi-part fixing. Because of this issue i decided to abandon the idea of working with *all* QgsVectorLayer data providers and to focus exclusively on shapefiles.\r\n\r\nItem `5` above was unnecessary so i abandoned it. I attempted to tackle item `6` but found myself spending too much time on the implementation because of some new API areas. I decided exporting all features was a nice fallback to get this thing done.\r\n\r\n### QGIS Versions Tested\r\n\r\nIn the current state, the plugin works across the QGIS 1.99 to 2.0.x major release using a [not-so-smart hack](https://github.com/thebigspoon/MultipartTransformer/commit/9c96a03e2a5e9808687a018d1986e6ac8931532f#diff-0). It has been tested on the following platforms:\r\n\r\n```\r\n1. Ubuntu 12.10 w/ QGIS v2.0 Nightly Build --> PASS\r\n2. Ubuntu 12.04 w/ QGIS v1.9 --> PASS\r\n3. Ubuntu 12.04 w/ QGIS v1.8 --> PASS\r\n4. Mac OSX w/ QGIS v1.8 --> FAIL: Logging doesn't work among browsing weirdness\r\n```\r\n\r\n### Plugins XML\r\nThis plugin can be loaded with the QGIS Python Plugin manager by adding the [plugins.xml URL over here](http://qgisplugin.inasafe.osgeohacks.com/plugins.xml) to the list of repositories.\r\n\r\n![Picture of Plugin](http://i40.tinypic.com/140j86d.png)\r\n\r\n### Technical Pain Points for Improvement\r\nHere's some thoughts on how the plugin code can be improved:\r\n\r\n1. Multi-part fixes *should* be done in place. It's just more elegant. So this would be good to tackle.\r\n\r\n2. Add in ability to handle all QgsVectorLayer data providers. It wouldn't take much. \r\n\r\n3. QFileDialog.saveState() was not working and so we have a [jenky workaround](https://github.com/thebigspoon/MultipartTransformer/blob/gh-pages/MultipartTransformer/multiparttransformerdialog.py#L28-L47). I think this is what's wrong on the Mac OSX version\r\n\r\n4. People like to name their shapefiles. Give them a file dialog for creating a [new shapefile instead of auto creating one](https://github.com/thebigspoon/MultipartTransformer/blob/gh-pages/MultipartTransformer/multiparttransformer_v20.py#L124-L140).\r\n\r\n5. Maintaining [two separate plugin APIs](https://github.com/thebigspoon/MultipartTransformer/commit/9c96a03e2a5e9808687a018d1986e6ac8931532f#diff-0) for different QGIS versions is not smart, as the [last line on the API change doc](http://hub.qgis.org/wiki/quantum-gis/Python_plugin_API_changes_from_18_to_20) points out. So either merge logic or pick one. At least it was a fun test!\r\n\r\n6. I've heard that QThread is not best used as a parent class; that there's some type of performance hit and people should use QObject.moveToThread( QThread ) instead. So investigate that.\r\n\r\n### Authors and Contributors\r\nGreg Corradini (@thebigspoon) and thanks to Aaron Racicot (@aaronr) for his quick testing","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}